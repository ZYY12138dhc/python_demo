-------------------------------------定义元组----------------------------
eg.1
#  不需要括号也可以
>>> tup1=1,2,3
>>> tup1
(1, 2, 3)
>>> tup2='a','b'
>>> tup2
('a', 'b')
>>> tup3="a","b"
>>> tup3
('a', 'b')
>>> tup4=true,false
Traceback (most recent call last):
  File "<pyshell#6>", line 1, in <module>
    tup4=true,false
NameError: name 'true' is not defined
>>> 
>>> type(tup3)
<class 'tuple'>

eg.2
# 创建空元组
>>> tup1=();
>>> tup1
()
>>> tup2=()
>>> tup2
()
>>>

eg.3
# 元组中只包含一个元素时，需要在元素后面添加逗号，否则括号会被当作运算符使用：
>>>tup1 = (50)
>>> type(tup1)     # 不加逗号，类型为整型
<class 'int'>
 
>>> tup1 = (50,)
>>> type(tup1)     # 加上逗号，类型为元组
<class 'tuple'>

-------------------------------------访问元组----------------------------
eg.4
# 元组与字符串类似，下标索引从0开始，可以进行截取，组合等。
# 元组可以使用下标索引来访问元组中的值，如下实例:
tup1 = ('Google', 'Runoob', 1997, 2000)
tup2 = (1, 2, 3, 4, 5, 6, 7 )
 
print ("tup1[0]: ", tup1[0])
print ("tup2[1:5]: ", tup2[1:5])

-------------------------------------修改元组----------------------------
eg.5
#元组中的元素值是不允许修改的，但我们可以对元组进行连接组合，如下实例:

tup1 = (12, 34.56);
tup2 = ('abc', 'xyz')
 
# 以下修改元组元素操作是非法的。
# tup1[0] = 100
 
# 创建一个新的元组
tup3 = tup1 + tup2;
print (tup3)

-------------------------------------删除元组----------------------------
eg.6
#元组中的元素值是不允许删除的，但我们可以使用del语句来删除整个元组，如下实例:
tup = ('Google', 'Runoob', 1997, 2000)
print (tup)
del tup;
print ("删除后的元组 tup : ")
print (tup)

#以上实例元组被删除后，输出变量会有异常信息，输出如下所示：
#删除后的元组 tup : 
Traceback (most recent call last):
  File "test.py", line 8, in <module>
    print (tup)
NameError: name 'tup' is not defined

------------------------------------元组运算符----------------------------
eg.7
#与字符串一样，元组之间可以使用 + 号和 * 号进行运算。这就意味着他们可以组合和复制，运算后会生成一个新的元组。
>>> tup1=1,2,3,45,6
>>> tup1=1,2,3,4,5,6
>>> tup1
(1, 2, 3, 4, 5, 6)
>>> len(tup1)
6
>>> tup2=7,
>>> tup2
(7,)
>>> tup3=tup1+tup2
>>> tup3
(1, 2, 3, 4, 5, 6, 7)
>>> tup2*4
(7, 7, 7, 7)
>>> 3 in tup1
True
>>> for x in tup1:
	print(x,)

	
1
2
3
4
5
6
>>> 

------------------------------------元组索引，截取----------------------------
eg.8
#因为元组也是一个序列，所以我们可以访问元组中的指定位置的元素，也可以截取索引中的一段元素，如下所示：
>>> tup1[2]
3
>>> tup1[-2]
5
>>> tup1[1:]
(2, 3, 4, 5, 6)
>>>

------------------------------------元组内置函数----------------------------
eg.9
#Python元组包含了以下内置函数
>>> len(tup1)
6
>>> max(tup1)
6
>>> min(tup1)
1
>>> list1=[1,2,3]
>>> tup4=tuple(list1)
>>> tup4
(1, 2, 3)
>>> 


